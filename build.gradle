
plugins {
    id 'version-catalog'
    id 'maven-publish'
}


group = 'com.fincher'

catalog {
    versionCatalog {
    	def jgitVersion = version('jgitVersion', '6.2.0.202206071550-r')
    	def junit5 = version('junit5', '5.11.0')
    	def slf4jVersion = version('slf4jVersion', '2.0.16')
    	
    	library ('awaitility', 'org.awaitility:awaitility:4.2.2')
    	library('fincher-gradle-release', 'com.fincher:gradle-release:1.0.4')
    	library('fincher-sonarlint', 'com.fincher:sonarlint:0.0.2')
    	library('guava', 'com.google.guava:guava:31.1-jre')
    	library('java-thread', 'com.fincher:java-thread:4.2.8')
    	library('jgit', 'org.eclipse.jgit', 'org.eclipse.jgit').versionRef(jgitVersion)
    	library('jgit-jsch', 'org.eclipse.jgit', 'org.eclipse.jgit.ssh.jsch').versionRef(jgitVersion)
    	library('junit5-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef(junit5)
    	library('junit5-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef(junit5)
    	library('junit5-params', 'org.junit.jupiter', 'junit-jupiter-params').versionRef(junit5)
    	library('log4j-over-slf4j', 'org.slf4j', 'log4j-over-slf4j').versionRef(slf4jVersion)
    	library('mockito', 'org.mockito:mockito-core:5.12.0')
        library('slf4j-api', 'org.slf4j', 'slf4j-api').versionRef(slf4jVersion)
        library('spotless-plugin-gradle', 'com.diffplug.spotless:spotless-plugin-gradle:6.11.0')
        library('velocity', 'org.apache.velocity:velocity:1.7')
    }
}

publishing {
    publications {
        versionCatalog(MavenPublication) {
            from(components.versionCatalog)
        }
    }

    repositories {
        maven {
            if (project.hasProperty("publishUsername") && project.hasProperty("publishPassword")) { 
                credentials {
                    username = "${publishUsername}"
                    password = "${publishPassword}"
                }
		
                if (project.version.endsWith('-SNAPSHOT')) {
                    url "${publishSnapshotUrl}"
                } else {
                    url "${publishReleaseUrl}"
                }

                allowInsecureProtocol = true

                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}
